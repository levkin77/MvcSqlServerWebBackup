@using MvcSqlServerWebBackup.Models
@model MvcSqlServerWebBackup.Models.ModelBackupTaskViewEdit
@{
    ViewBag.Title = "Редактирование задания резервного копирования";

    var ConnectionList =
    ModelHelper.GetConnectionView().Select(s => new SelectListItem {Selected = s.Id == Model.ConnectionId, Value = s.Id, Text = string.Format("{0} - {1}",s.ServerName, s.Name)});

    var CloudDriveList =
        ModelHelper.GetCloudDriveView().Select(s => new SelectListItem { Selected = s.Id == Model.CloudDriveId, Value = s.Id, Text = string.Format("{0} - {1}", s.Provider, s.Name) });
}

<h2>Редактирование задания резервного копирования</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Текущее соединение: @Model.Name</h4>
        <hr />
        <div>
            @Html.ActionLink("Назад к списку", "Index")
        </div>
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Наименование", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConnectionId, "Сервер", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ConnectionId, ConnectionList,
               new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConnectionId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DbName, "База данных", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DbName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DbName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CloudDriveId, "Хранилище", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CloudDriveId, CloudDriveList,
               new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CloudDriveId)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>
                    @Html.EditorFor(m => m.UseZip)
                    Сжатие файла с пользованием ZIP
                </label>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>
                    @Html.EditorFor(m => m.AddCurrentDateTime)
                    Добавлять текущее дату и время к имени резервной копии
                </label>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>
                    @Html.EditorFor(m => m.CopyOnly)
                    Создание резервной копии copy-only
                </label>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Compression, "Сжатие", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Compression, new List<SelectListItem>{
               new SelectListItem(){Text = "По умолчанию", Value = "0", Selected = @Model.Compression== 0 },
               new SelectListItem(){Text = "Сжатие", Value = "1", Selected = @Model.Compression== 1 },
               new SelectListItem(){Text = "Без сжатие", Value = "2", Selected = @Model.Compression== 2 }
           },
               new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Compression)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Memo,"Описание", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Memo, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Memo)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}