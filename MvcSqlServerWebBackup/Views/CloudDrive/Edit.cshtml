@model MvcSqlServerWebBackup.Models.ModelCloudDriveViewEdit
@{
    ViewBag.Title = "Редактирование облачного диска";
    //style="display: none;"
    //var disableEditProvide = !string.IsNullOrEmpty(Model.Id);

    //var locationIsHide = (Model.Provider != CloudDrive.PROVIDER_FILESYSTEM)
    //    & (Model.Provider!=CloudDrive.PROVIDER_B2CLOUD);
}
@*@functions {
    object getHtmlAttributes(bool ReadOnly, string CssClass)
    {
        if (ReadOnly)
        {
            return new { @class = CssClass, @disabled = "true" };
        }
        return new { @class = CssClass };
    }
}*@

<h2>Редактирование облачного диска</h2>
@if (Model.Provider == CloudDrive.PROVIDER_GOOGLEDRIVE)
{
    <a href="~/home/about#google">Помощь: как настроить, что заполнять...</a><br/>
    <a href="https://accounts.google.com/ServiceLogin">Аккаунт Google</a><br/>
    <a href="https://console.developers.google.com/iam-admin">IAM и администрирование</a>
}
@using (Html.BeginForm("Edit", "CloudDrive", FormMethod.Post ))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Текущее хранилище: @Model.Name</h4>
        <hr />
        <div>
            @Html.ActionLink("Назад к списку", "Index")
        </div>
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model=> Model.Provider)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Наименование", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(m => m.Provider, "Провайдер", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Provider, new List<SelectListItem>{
               new SelectListItem(){Text = "Файловая система", Value = CloudDrive.PROVIDER_FILESYSTEM, Selected = @Model.Provider== CloudDrive.PROVIDER_FILESYSTEM },
               new SelectListItem(){Text = "Серверное устройство", Value = CloudDrive.PROVIDER_BACKUPDEVICE, Selected = @Model.Provider== CloudDrive.PROVIDER_BACKUPDEVICE },
               new SelectListItem(){Text = "Mega", Value = CloudDrive.PROVIDER_MEGA, Selected = @Model.Provider== CloudDrive.PROVIDER_MEGA },
               new SelectListItem(){Text = "MailRu", Value = CloudDrive.PROVIDER_MAILRU, Selected = @Model.Provider== CloudDrive.PROVIDER_MAILRU },
               new SelectListItem(){Text = "pCloud", Value = CloudDrive.PROVIDER_PCLOUD, Selected = @Model.Provider== CloudDrive.PROVIDER_PCLOUD },
               new SelectListItem(){Text = "B2 Cloud Backblaze", Value = CloudDrive.PROVIDER_B2CLOUD, Selected = @Model.Provider== CloudDrive.PROVIDER_B2CLOUD },
               new SelectListItem(){Text = "YandexDisc", Value = CloudDrive.PROVIDER_YANDEXDISK, Selected = @Model.Provider== CloudDrive.PROVIDER_YANDEXDISK },

               new SelectListItem(){Text = "GoogleDrive", Value = CloudDrive.PROVIDER_GOOGLEDRIVE, Selected = @Model.Provider== CloudDrive.PROVIDER_GOOGLEDRIVE }
           },
           new { @class = "form-control"  })
                @*//@Html.TextBox("name", "value", @getHtmlAttributes(Model.ReadOnly, "test"))*@

                @*@Html.ValidationMessageFor(m => m.Provider)*@
            @*</div>
        </div>*@
        
@if (Model.Provider == CloudDrive.PROVIDER_FILESYSTEM | Model.Provider == CloudDrive.PROVIDER_GOOGLEDRIVE)
{
    <div class="form-group">
        @Html.LabelFor(m => m.Location, "Расположение", new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(m => m.Location,
                new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(m => m.Location)
        </div>
    </div>
}
        <div class="form-group">
            @Html.LabelFor(model => model.Uid, "Пользователь", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Uid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Uid)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, "Пароль", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>
        @if (Model.Provider == CloudDrive.PROVIDER_YANDEXDISK)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Token, "Токен", new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Token, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Token)
                </div>
            </div>
        }
        @if (Model.Provider == CloudDrive.PROVIDER_GOOGLEDRIVE)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ClientId, "Ид клиента", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClientId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientId)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CertificateFile, "Файл сертификата", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CertificateFile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CertificateFile)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CertificatePassword, "Пароль сертификата", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CertificatePassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CertificatePassword)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ServiceAccountEmail, "Сервисный Email", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ServiceAccountEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ServiceAccountEmail)
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Memo,"Описание", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Memo, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Memo)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}